	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_DrawTitle
_DrawTitle:
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 10
	push	hl
	ld	hl, 118
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintString
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawMenu
_DrawMenu:
	ld	hl, L_.str.1
	ld	de, 17
	ld	bc, 230
	push	bc
	push	de
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 230
	push	hl
	ld	hl, 86
	push	hl
	ld	hl, L_.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 230
	push	hl
	ld	hl, 136
	push	hl
	ld	hl, L_.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 230
	push	hl
	ld	hl, 213
	push	hl
	ld	hl, L_.str.4
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 230
	push	hl
	ld	hl, 273
	push	hl
	ld	hl, L_.str.5
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawBoard
_DrawBoard:
	ld	hl, -3
	call	__frameset
	ld	hl, -2
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, 256
	ld	iy, 32
BB2_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	z, BB2_2
	push	iy
	ld	hl, 256
	push	hl
	push	iy
	ld	hl, 64
	push	hl
	ld	(ix - 3), iy
	call	_gfx_Line
	ld	iy, (ix - 3)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, 32
	add	iy, de
	ld	de, 256
	jp	BB2_1
BB2_2:
	ld	de, 288
	ld	iy, 64
BB2_3:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	z, BB2_5
	ld	hl, 224
	push	hl
	push	iy
	ld	hl, 32
	push	hl
	push	iy
	ld	(ix - 3), iy
	call	_gfx_Line
	ld	de, 288
	ld	iy, (ix - 3)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, 32
	add	iy, bc
	jp	BB2_3
BB2_5:
	ld	hl, -21
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 127
	push	hl
	ld	hl, 256
	push	hl
	ld	de, 97
	push	de
	push	hl
	call	_gfx_Line
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_GetCarPositionsFromId
_GetCarPositionsFromId:
	ld	hl, -30
	call	__frameset
	ld	hl, 1810
	ld	iy, _levels_data
	lea	de, ix - 15
	ld	(ix - 18), de
	ld	bc, 0
	ld	de, (ix + 6)
	ld	c, e
	ld	b, d
	or	a, a
	sbc	hl, bc
	ld	bc, 15
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	de, (ix - 18)
	lea	hl, iy
	ldir
	ld	bc, 0
	ld	de, 2
	ld	iy, _car_positions
	push	bc
	pop	hl
BB3_1:
	ld	(ix - 21), hl
	or	a, a
	sbc	hl, de
	jp	z, BB3_2
BB3_12:
	push	bc
	pop	hl
	ld	de, 18
	or	a, a
	sbc	hl, de
	jp	z, BB3_14
	lea	hl, iy
	add	iy, bc
	ld	(iy), 0
	push	hl
	pop	iy
	inc	bc
	jp	BB3_12
BB3_14:
	ld	hl, (ix - 21)
	inc	hl
	lea	iy, iy + 19
	ld	bc, 0
	ld	de, 2
	jp	BB3_1
BB3_2:
	ld	a, 8
	ld	l, 37
	ld	(ix - 24), hl
	ld	hl, _car_positions
	ld	(ix - 21), hl
	ld	bc, 0
	push	bc
	pop	iy
	lea	de, iy
BB3_3:
	push	de
	pop	hl
	ld	bc, 6
	or	a, a
	sbc	hl, bc
	jp	z, BB3_4
	ld	(ix - 30), de
	ex	de, hl
	add	hl, hl
	ex	de, hl
	ld	iy, (ix - 18)
	add	iy, de
	or	a, a
	sbc	hl, hl
	ld	l, (iy)
	ld	c, a
	call	__ishl
	inc	de
	ld	iy, (ix - 18)
	add	iy, de
	ld	de, 0
	ld	e, (iy)
	add	hl, de
	ld	(ix - 27), hl
	ld	de, 2
BB3_16:
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	inc	bc
	jp	z, BB3_18
	ld	iy, (ix - 27)
	lea	hl, iy
	ld	bc, 37
	call	__idivs
	ld	bc, (ix - 24)
	ld	b, l
	ld	(ix - 24), bc
	mlt	bc
	ld	a, iyl
	sub	a, c
	ld	iy, (ix - 21)
	add	iy, de
	ld	(iy), a
	ld	a, 8
	dec	de
	ld	(ix - 27), hl
	jp	BB3_16
BB3_18:
	ld	de, (ix - 30)
	inc	de
	ld	iy, (ix - 21)
	lea	iy, iy + 3
	ld	(ix - 21), iy
	push	bc
	pop	iy
	jp	BB3_3
BB3_4:
	ld	a, (ix - 3)
	ld	de, 8
	lea	bc, iy
BB3_5:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB3_6
	ld	e, a
	and	a, 1
	ld	iy, _car_positions
	add	iy, bc
	ld	(iy + 19), a
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jp	nz, BB3_22
	ld	a, (iy)
	cp	a, 36
	jp	z, BB3_22
	ld	(iy + 19), 2
BB3_22:
	ld	a, e
	srl	a
	inc	bc
	ld	de, 8
	jp	BB3_5
BB3_6:
	ld	a, (ix - 2)
	ld	bc, 0
BB3_7:
	push	bc
	pop	hl
	ld	de, 8
	or	a, a
	sbc	hl, de
	jp	z, BB3_23
	ld	e, a
	and	a, 1
	ld	iy, _car_positions
	add	iy, bc
	ld	(iy + 27), a
	ld	l, 1
	xor	a, l
	xor	a, l
	bit	0, a
	jp	nz, BB3_11
	ld	a, (iy + 8)
	cp	a, 36
	jp	z, BB3_11
	ld	(iy + 27), 2
BB3_11:
	ld	a, e
	srl	a
	inc	bc
	jp	BB3_7
BB3_23:
	ld	a, (ix - 1)
	ld	(_car_positions+18), a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawLevelInfo
_DrawLevelInfo:
	ld	hl, -9
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 9), hl
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	ld	hl, (ix + 12)
	ld	(ix - 6), hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 40
	push	hl
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, 10
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, L_.str.6
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 10
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	de, (ix - 9)
	ld	l, e
	ld	h, d
	inc	hl
	ld	de, 1
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 42
	push	hl
	ld	hl, L_.str.7
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, L_.str.8
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 75
	push	hl
	ld	hl, 10
	push	hl
	ld	hl, 240
	push	hl
	call	_gfx_FillRectangle
	ld	hl, (ix - 6)
	pop	de
	pop	de
	pop	de
	pop	de
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	z, BB4_2
	ld	bc, L_.str.9
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	(ix - 6), de
	ld	de, 10
	push	de
	ld	hl, 240
	push	hl
	push	bc
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 20
	push	hl
	ld	hl, 240
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
BB4_2:
	ld	hl, 40
	push	hl
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, 267
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 30
	push	hl
	ld	hl, 267
	push	hl
	ld	hl, L_.str.10
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 267
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	de, (ix - 3)
	ld	l, e
	ld	h, d
	ld	de, 1
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 283
	push	hl
	ld	hl, L_.str.7
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 267
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	a, (_car_positions+18)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	(ix + 6), hl
	ld	(ix + 9), 1
	ld	sp, ix
	pop	ix
	jp	_gfx_PrintInt
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawCars
_DrawCars:
	ld	hl, -15
	call	__frameset
	ld	iy, _car_positions
	ld	bc, 0
	ld	l, 6
	ld	(ix - 6), hl
	ld	l, -4
	ld	(ix - 3), hl
	ld	de, 16
BB5_1:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB5_34
	lea	de, iy
	ld	(ix - 9), bc
	add	iy, bc
	ld	(ix - 12), iy
	ld	c, (iy + 19)
	ld	a, c
	or	a, a
	jp	nz, BB5_4
	ld	hl, (ix - 3)
	push	de
	pop	iy
	jp	BB5_33
BB5_4:
	ld	a, c
	cp	a, 2
	ld	b, 27
	ld	iyl, b
	jp	nz, BB5_6
	push	af
	ld	a, iyl
	ld	(ix - 15), a
	pop	af
	ld	a, 59
	ld	(ix - 13), a
BB5_6:
	ld	hl, (ix - 9)
	ld	de, 5
	or	a, a
	sbc	hl, de
	ld	e, 1
	ld	d, 1
	jp	c, BB5_8
	ld	e, 0
BB5_8:
	ld	a, c
	cp	a, 2
	ld	a, e
	jp	z, BB5_10
	xor	a, a
BB5_10:
	xor	a, d
	ld	hl, (ix - 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	l, 1
	jp	z, BB5_12
	ld	l, 0
BB5_12:
	bit	0, a
	ld	a, d
	ld	h, (ix - 13)
	jp	nz, BB5_14
	ld	a, l
BB5_14:
	bit	0, a
	jp	nz, BB5_16
	push	af
	ld	a, iyl
	ld	(ix - 15), a
	pop	af
BB5_16:
	bit	0, a
	jp	nz, BB5_18
	ld	a, 91
	ld	h, a
BB5_18:
	ld	a, c
	cp	a, 1
	ld	a, 1
	jp	z, BB5_20
	ld	a, 0
BB5_20:
	bit	0, a
	ld	c, 59
	jp	nz, BB5_22
	ld	c, (ix - 15)
BB5_22:
	bit	0, a
	ld	b, iyl
	jp	nz, BB5_24
	ld	b, h
BB5_24:
	bit	0, a
	jp	nz, BB5_26
	ld	e, 0
BB5_26:
	ld	a, e
	xor	a, d
	bit	0, a
	ld	a, d
	jp	nz, BB5_28
	ld	a, l
BB5_28:
	bit	0, a
	jp	nz, BB5_30
	ld	l, 91
	ld	c, l
BB5_30:
	ld	(ix - 13), c
	bit	0, a
	jp	nz, BB5_32
	ld	b, iyl
BB5_32:
	ld	(ix - 14), b
	ld	hl, (ix - 3)
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 12)
	ld	b, (hl)
	ld	hl, (ix - 6)
	ld	c, l
	call	__bdivu
	ld	h, a
	ld	e, l
	ld	d, h
	mlt	de
	ld	a, b
	sub	a, e
	ld	e, 5
	ld	b, e
	call	__bshl
	ld	de, 0
	push	de
	pop	iy
	ld	iyl, a
	ld	bc, 67
	add	iy, bc
	ld	(ix - 6), hl
	ld	e, h
	push	de
	pop	hl
	ld	c, 5
	call	__ishl
	ld	bc, 35
	add	hl, bc
	ld	e, (ix - 13)
	ld	bc, 0
	ld	c, (ix - 14)
	push	bc
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	a, (ix - 13)
	ld	(ix - 15), a
	ld	a, (ix - 14)
	ld	(ix - 13), a
	ld	iy, _car_positions
BB5_33:
	ld	bc, (ix - 9)
	inc	bc
	dec	l
	ld	(ix - 3), hl
	ld	de, 16
	jp	BB5_1
BB5_34:
	ld	a, (_car_positions+16)
	cp	a, 36
	ld	hl, -20
	jp	z, BB5_36
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_car_positions+16)
	ld	b, a
	ld	hl, (ix - 6)
	ld	c, l
	call	__bdivu
	ld	d, a
	ld	e, l
	ld	l, e
	ld	h, d
	mlt	hl
	ld	a, b
	sub	a, l
	ld	b, 5
	call	__bshl
	ld	iy, 0
	ld	iyl, a
	ld	bc, 67
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	c, 5
	call	__ishl
	ld	de, 35
	add	hl, de
	ld	de, 27
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -20
BB5_36:
	ld	a, (_car_positions+17)
	cp	a, 36
	jp	z, BB5_38
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, (_car_positions+17)
	ld	b, a
	ld	de, (ix - 6)
	ld	c, e
	call	__bdivu
	ld	d, a
	ld	l, e
	ld	h, d
	mlt	hl
	ld	a, b
	sub	a, l
	ld	b, 5
	call	__bshl
	ld	iy, 0
	ld	iyl, a
	ld	bc, 67
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	c, 5
	call	__ishl
	ld	de, 35
	add	hl, de
	ld	de, 27
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB5_38:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawWinScreen
_DrawWinScreen:
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 100
	push	hl
	ld	hl, 2
	push	hl
	ld	hl, L_.str.11
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 120
	push	hl
	ld	hl, 37
	push	hl
	ld	hl, L_.str.12
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_CheckPos
_CheckPos:
	ld	hl, -19
	call	__frameset
	ld	iyl, 0
	ld	a, 99
	ld	(ix - 13), a
	ld	de, 0
	ld	bc, 16
	ld	a, iyl
BB7_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB7_2
	ex	de, hl
	ld	d, iyl
	ex	de, hl
	ld	c, a
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy)
	ld	l, (ix + 6)
	cp	a, l
	jp	nz, BB7_43
	ld	a, (iy + 19)
	or	a, a
	jp	nz, BB7_5
BB7_43:
	inc	de
	ld	a, c
	inc	a
	ld	bc, 16
	ex	de, hl
	ld	iyl, d
	ex	de, hl
	jp	BB7_1
BB7_2:
	ld	b, 99
	ld	a, b
	ld	de, 0
	jp	BB7_6
BB7_5:
	ld	de, 0
	ld	a, c
	ex	de, hl
	ld	iyl, d
	ex	de, hl
BB7_6:
	or	a, a
	sbc	hl, hl
	ld	l, (ix + 6)
	ld	(ix - 3), hl
	dec	hl
	ld	(ix - 16), hl
	push	af
	ld	a, iyl
	ld	(ix - 9), a
	pop	af
	ld	c, iyl
BB7_7:
	push	de
	pop	hl
	ld	bc, 16
	or	a, a
	sbc	hl, bc
	jp	z, BB7_12
	push	af
	ld	a, iyl
	ld	(ix - 6), a
	pop	af
	ld	(ix - 12), a
	cp	a, 99
	jp	nz, BB7_44
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy + 19)
	cp	a, 1
	jp	nz, BB7_44
	or	a, a
	sbc	hl, hl
	ld	(ix - 19), hl
	ld	hl, (ix - 19)
	ld	l, (iy)
	ld	(ix - 19), hl
	ld	hl, (ix - 16)
	ld	bc, (ix - 19)
	or	a, a
	sbc	hl, bc
	jp	z, BB7_11
BB7_44:
	inc	de
	push	af
	ld	a, (ix - 6)
	ld	iyl, a
	pop	af
	inc	iyl
	ld	a, (ix - 12)
	jp	BB7_7
BB7_11:
	ld	a, (ix - 6)
BB7_12:
	ld	hl, (ix - 3)
	ld	de, -6
	add	hl, de
	ld	(ix - 12), hl
	ld	de, 0
BB7_13:
	push	de
	pop	hl
	ld	bc, 16
	or	a, a
	sbc	hl, bc
	jp	z, BB7_14
	ld	(ix - 6), a
	cp	a, 99
	jp	nz, BB7_45
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy + 19)
	cp	a, 2
	jp	nz, BB7_45
	or	a, a
	sbc	hl, hl
	ld	(ix - 16), hl
	ld	hl, (ix - 16)
	ld	l, (iy)
	ld	(ix - 16), hl
	ld	hl, (ix - 12)
	ld	bc, (ix - 16)
	or	a, a
	sbc	hl, bc
	jp	z, BB7_18
BB7_45:
	inc	de
	ld	a, (ix - 9)
	inc	a
	ld	(ix - 9), a
	ld	a, (ix - 6)
	jp	BB7_13
BB7_14:
	ld	b, a
BB7_19:
	ld	a, (_car_positions+16)
	ld	l, a
	ld	a, b
	cp	a, 99
	jp	nz, BB7_23
	ld	a, l
	ld	l, (ix + 6)
	cp	a, l
	jp	nz, BB7_23
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy + 19)
	or	a, a
	ld	b, 99
	jp	z, BB7_23
	ld	b, 16
BB7_23:
	ld	a, (_car_positions+17)
	ld	l, a
	ld	a, b
	cp	a, 99
	jp	nz, BB7_28
	ld	a, l
	ld	l, (ix + 6)
	cp	a, l
	jp	nz, BB7_28
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy + 19)
	or	a, a
	jp	z, BB7_27
	ld	a, 17
	ld	(ix - 13), a
BB7_27:
	ld	b, (ix - 13)
BB7_28:
	ld	hl, (ix - 3)
	ld	de, -2
	add	hl, de
	ld	(ix - 9), hl
	ld	de, 0
	ex	de, hl
	ld	c, 1
BB7_29:
	push	hl
	pop	iy
	ld	de, 4
	or	a, a
	sbc	hl, de
	jp	z, BB7_30
	ld	a, b
	cp	a, 99
	ld	(ix - 6), iy
	jp	nz, BB7_46
	ld	iy, _car_positions
	ld	de, (ix - 6)
	add	iy, de
	ld	a, (iy + 20)
	cp	a, 1
	jp	nz, BB7_46
	or	a, a
	sbc	hl, hl
	ld	(ix - 12), hl
	ld	hl, (ix - 12)
	ld	l, (iy + 1)
	ld	(ix - 12), hl
	ld	hl, (ix - 9)
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	jp	z, BB7_34
BB7_46:
	inc	c
	ld	hl, (ix - 6)
	inc	hl
	jp	BB7_29
BB7_30:
	ld	iyl, b
BB7_35:
	ld	de, -12
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	ld	de, 0
	ld	b, 1
	ld	a, b
BB7_36:
	push	de
	pop	hl
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jp	z, BB7_37
	ld	b, a
	ld	c, iyl
	ld	a, iyl
	cp	a, 99
	jp	nz, BB7_47
	ld	iy, _car_positions
	add	iy, de
	ld	a, (iy + 20)
	cp	a, 2
	jp	nz, BB7_47
	ld	(ix - 6), de
	ld	de, 0
	ld	e, (iy + 1)
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	de, (ix - 6)
	jp	z, BB7_41
BB7_47:
	ld	a, b
	inc	a
	inc	de
	ld	iyl, c
	jp	BB7_36
BB7_37:
	ld	a, iyl
BB7_42:
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	sp, ix
	pop	ix
	ret
BB7_18:
	ld	b, (ix - 9)
	jp	BB7_19
BB7_34:
	ld	iyl, c
	jp	BB7_35
BB7_41:
	ld	a, b
	jp	BB7_42
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_DrawCursor
_DrawCursor:
	ld	hl, -11
	call	__frameset
	ld	l, (ix + 6)
	push	hl
	call	_CheckPos
	pop	de
	ld	bc, 255
	call	__iand
	ld	a, -4
	ld	e, (ix + 9)
	sub	a, e
	ld	e, a
	ld	(ix - 3), hl
	ld	a, l
	cp	a, 99
	jp	nz, BB8_1
	push	de
	call	_gfx_SetColor
	pop	hl
	ld	b, (ix + 6)
	ld	e, 6
	ld	c, e
	call	__bdivu
	ld	d, a
	ld	l, e
	ld	h, d
	mlt	hl
	ld	a, b
	sub	a, l
	ld	b, 5
	call	__bshl
	ld	iy, 0
	ld	iyl, a
	ld	(ix - 3), iy
	ld	bc, 64
	add	iy, bc
	or	a, a
	sbc	hl, hl
	ld	l, d
	ld	c, 5
	call	__ishl
	ld	(ix - 6), hl
	ld	de, 32
	add	hl, de
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	de, 67
	ld	iy, (ix - 3)
	add	iy, de
	ld	de, 35
	ld	hl, (ix - 6)
	add	hl, de
	ex	de, hl
	ld	hl, 27
	push	hl
	push	hl
	push	de
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB8_7:
	ld	sp, ix
	pop	ix
	ret
BB8_1:
	ld	(ix - 10), de
	ld	iyl, 0
	ld	e, iyl
BB8_2:
	ld	b, e
	ld	l, 6
	ld	c, l
	call	__bdivu
	ld	b, l
	call	__bshl
	ld	l, a
	ld	a, iyl
	add	a, l
	ld	l, a
	ld	a, e
	cp	a, 36
	jp	z, BB8_7
	ld	(ix - 11), l
	push	af
	ld	a, iyl
	ld	(ix - 7), a
	pop	af
	ld	(ix - 6), de
	push	de
	call	_CheckPos
	pop	de
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	jp	nz, BB8_5
	ld	hl, (ix - 10)
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, (ix - 6)
	ld	b, l
	ld	l, 6
	ld	c, l
	call	__bdivu
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	push	af
	ld	a, (ix - 11)
	ld	iyl, a
	pop	af
	ld	de, 64
	add	iy, de
	ld	l, a
	ld	c, 5
	call	__ishl
	ld	de, 32
	add	hl, de
	push	de
	push	de
	push	hl
	push	iy
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB8_5:
	ld	de, (ix - 6)
	inc	e
	ld	a, (ix - 7)
	add	a, 32
	ld	iyl, a
	jp	BB8_2
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -1867
	call	__frameset
	ld	de, -1819
	lea	iy, ix
	add	iy, de
	lea	bc, iy
	ld	(iy), 0
	push	bc
	pop	hl
	inc	hl
	ld	iy, 1812
	ex	de, hl
	ld	(ix - 3), de
	ld	de, -1833
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	bc
	pop	hl
	lea	bc, iy
	ld	de, (ix - 3)
	ldir
	ld	iy, -851900
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	e, a
	push	de
	push	hl
	call	_srandom
	pop	hl
	pop	hl
	ld	hl, L_.str.14
	push	hl
	ld	hl, L_.str.13
	push	hl
	call	_ti_Open
	ld	e, a
	pop	hl
	pop	hl
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	call	_ti_GetSize
	pop	de
	ld.sis	de, 1000
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_2
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 1813
	push	hl
	ld	bc, -1833
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	call	_ti_SetArchiveStatus
	pop	hl
	pop	hl
BB9_2:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, 1813
	push	hl
	ld	bc, -1833
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Read
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Close
	pop	hl
	ld	l, (ix - 8)
	ld	h, 0
	ld	c, 8
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	call	__sshl
	ld	e, (ix - 7)
	ld	c, iyl
	ld	b, iyh
	ld	(ix - 3), de
	ld	de, -1861
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	ld	de, (ix - 3)
	ld	d, b
	add.sis	hl, de
	push	ix
	ld	bc, -1826
	add	ix, bc
	ld	(ix), hl
	pop	ix
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 510
	push	hl
	ld	hl, _palette_gfx
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	call	_gfx_SwapDraw
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	ld	hl, 0
	ld	bc, -1849
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	hl, -720868
	ld.sis	iy, 0
	ld	e, iyl
	ld	d, iyh
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld.sis	de, 98
	push	ix
	ld	bc, -1836
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	e, iyl
	ld	d, iyh
	push	ix
	ld	bc, -1843
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld.sis	bc, 99
BB9_3:
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1823
	add	ix, bc
	ld	(ix), e
	pop	ix
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 64
	ld	bc, (ix - 3)
	jp	z, BB9_316
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 2
	ld	de, -1827
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	a, (hl)
	jp	nz, BB9_6
	ld	de, -1852
	lea	hl, ix
	add	hl, de
	ld	l, (hl)
	cp	a, l
	jp	nz, BB9_10
BB9_6:
	ld	e, c
	ld	d, b
BB9_7:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 4
	jp	nz, BB9_9
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	push	ix
	ld	bc, -1852
	add	ix, bc
	ld	l, (ix)
	pop	ix
	cp	a, l
	jp	nz, BB9_20
BB9_9:
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -1839
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	c, iyl
	ld	b, iyh
	jp	BB9_57
BB9_10:
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	a, 1
	ld	e, a
	jp	nz, BB9_12
	ld	a, 0
	ld	e, a
BB9_12:
	ld	(ix - 3), de
	ld	de, -1855
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	ix
	ld	bc, -1822
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	de, (ix - 3)
	jp	z, BB9_14
	xor	a, a
	ld	e, a
BB9_14:
	ld	l, e
	ld	h, d
	ld	c, 15
	call	__sshl
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	add.sis	iy, iy
	sbc.sis	hl, hl
	ld	e, l
	ld	d, h
	ld	(ix - 3), bc
	ld	bc, -1826
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add.sis	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	ld	bc, (ix - 3)
	jp	nz, BB9_35
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	bc, 6
	call	__sremu
	ld	c, l
	ld	b, h
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	de, -1855
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	iy, (iy)
	jp	z, BB9_297
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_297
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	ld	bc, -1830
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	l, e
	ld	h, d
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	dec	hl
	push	ix
	ld	bc, -1839
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_69
	ld	bc, -1839
BB9_19:
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	jp	BB9_36
BB9_20:
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	ix
	ld	bc, -1826
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld.sis	de, 1810
	or	a, a
	sbc.sis	hl, de
	ld	a, 1
	ld	e, a
	jp	c, BB9_22
	ld	a, 0
	ld	e, a
BB9_22:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	z, BB9_24
	xor	a, a
	ld	e, a
BB9_24:
	ld	l, e
	ld	h, d
	ld.sis	bc, 1
	call	__sand
	ld	e, l
	ld	d, h
	ld	(ix - 3), bc
	ld	bc, -1826
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add.sis	hl, de
	push	ix
	ld	de, -1826
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	bc, (ix - 3)
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_37
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	bc, 6
	call	__sremu
	ld	c, l
	ld	b, h
	ld.sis	de, 5
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_38
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_38
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	ld	bc, -1830
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	l, e
	ld	h, d
	push	ix
	ld	bc, -1836
	add	ix, bc
	ld	(ix), hl
	pop	ix
	inc	hl
	push	ix
	ld	bc, -1839
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	z, BB9_34
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -1858
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	call	_CheckPos
	ld	de, -1858
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_32
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 2
	add	hl, de
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	z, BB9_34
	ld	de, -1858
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	jp	z, BB9_282
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_282
BB9_32:
	ld	hl, _car_positions
	add	hl, bc
BB9_33:
	ld	d, 0
	ld	e, (hl)
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
BB9_34:
	ld.sis	hl, 98
	ld	de, -1836
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	jp	BB9_55
BB9_35:
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB9_36:
	ld	bc, -1855
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	jp	BB9_298
BB9_37:
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	de, -1843
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	de, -1858
	add	ix, de
	ld	(ix), hl
	pop	ix
	jp	BB9_56
BB9_38:
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_41
BB9_39:
	ld	de, -1830
BB9_40:
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld.sis	hl, 98
	push	ix
	ld	de, -1836
	add	ix, de
	ld	(ix), hl
	pop	ix
	jp	BB9_55
BB9_41:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	bc, -1830
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, -1839
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	(iy), bc
	jp	nz, BB9_44
BB9_42:
	ld	hl, _car_positions
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	add	a, 2
	ld	l, a
	push	hl
	call	_CheckPos
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_46
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 4
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_49
	jp	BB9_46
BB9_44:
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	call	__setflag
	jp	m, BB9_46
	push	bc
	pop	hl
	ld	de, 16
	or	a, a
	sbc	hl, de
	call	__setflag
	jp	m, BB9_42
	jp	BB9_54
BB9_46:
	push	bc
	pop	de
	dec	de
	ex	de, hl
	ld	de, 4
	or	a, a
	sbc	hl, de
	jp	nc, BB9_54
	ld	hl, _car_positions
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	add	a, 3
	ld	l, a
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_54
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	de, -1839
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	jp	nc, BB9_54
BB9_49:
	ld	hl, _car_positions+19
	add	hl, bc
	ld	a, (hl)
	cp	a, 1
	jp	nz, BB9_54
	ld	hl, _car_positions
	add	hl, bc
	ld	bc, -1858
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	inc	a
	ld	(hl), a
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc.sis	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	ld	bc, 0
	ld	(ix - 3), de
	ld	de, -1855
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	c, l
	ld	b, h
	ld	de, (ix - 3)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jp	nz, BB9_52
	ld	a, 0
BB9_52:
	and	a, 1
	ld	(ix - 3), de
	ld	de, -1861
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	c, a
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	push	ix
	ld	de, -1843
	add	ix, de
	ld	hl, (ix)
	pop	ix
	add.sis	hl, bc
	ld	a, (_car_positions)
	cp	a, 16
	push	ix
	ld	bc, -1833
	push	af
	add	ix, bc
	pop	af
	ld	iy, (ix)
	pop	ix
	ld	de, (ix - 3)
	jp	nz, BB9_290
	ld	a, l
	ld	de, 0
	ld	(ix - 3), de
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, (ix - 3)
	ld	e, c
	ld	d, b
	lea	hl, iy
	add	hl, de
	ld	(hl), a
	ld.sis	hl, 0
	ld	e, l
	ld	d, h
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld.sis	de, 98
	push	ix
	ld	bc, -1836
	add	ix, bc
	ld	(ix), de
	pop	ix
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld.sis	hl, 99
	ld	e, l
	ld	d, h
	ld.sis	bc, 2
	jp	BB9_57
BB9_54:
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB9_55:
	ld	de, -1843
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	de, -1858
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld.sis	bc, 1
BB9_56:
	ld	(ix - 3), bc
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, (ix - 3)
BB9_57:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 8
	jp	z, BB9_60
	ld	(ix - 3), bc
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB9_59:
	ld	bc, (ix - 3)
	jp	BB9_85
BB9_60:
	ld	(ix - 3), bc
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1852
	lea	iy, ix
	add	iy, bc
	ld	l, (iy)
	cp	a, l
	push	ix
	ld	bc, -1839
	push	af
	add	ix, bc
	pop	af
	ld	iy, (ix)
	pop	ix
	ld	bc, (ix - 3)
	jp	nz, BB9_62
	jp	BB9_85
BB9_62:
	ld	(ix - 3), bc
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix - 3)
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_81
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 6
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_81
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_81
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, -6
	add	hl, de
	push	ix
	ld	bc, -1822
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_72
	ld	de, -1822
BB9_67:
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
BB9_68:
	push	ix
	ld	de, -1864
	add	ix, de
	ld	bc, (ix)
	pop	ix
	jp	BB9_81
BB9_69:
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	call	_CheckPos
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_77
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, -2
	add	hl, de
	ld	bc, -1867
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_75
	ld	bc, -1867
	jp	BB9_19
BB9_72:
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	call	_CheckPos
	ld	de, -1822
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_80
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, -12
	add	hl, de
	ld	bc, -1843
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_78
	ld	de, -1843
	jp	BB9_67
BB9_75:
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	jp	z, BB9_284
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_284
BB9_77:
	ld	hl, _car_positions
	add	hl, bc
	ld	d, 0
	ld	e, (hl)
	ex	de, hl
	jp	BB9_36
BB9_78:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	jp	z, BB9_286
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 12
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_286
BB9_80:
	ld	hl, _car_positions
	add	hl, bc
	ld	iyh, 0
	push	af
	ld	a, (hl)
	ld	iyl, a
	pop	af
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
BB9_81:
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_84
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 6
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_84
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_94
BB9_84:
	ld	de, -1855
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	e, l
	ld	d, h
BB9_85:
	ld	(ix - 3), bc
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_87
	ld	(ix - 3), bc
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1852
	lea	iy, ix
	add	iy, bc
	ld	l, (iy)
	cp	a, l
	ld	bc, (ix - 3)
	jp	nz, BB9_88
BB9_87:
	ld	(ix - 3), bc
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	de, -1826
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
	ld	bc, (ix - 3)
	jp	BB9_125
BB9_88:
	ld	(ix - 3), bc
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix - 3)
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	ld	de, -1826
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	iy, (hl)
	jp	nz, BB9_107
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 30
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_107
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_107
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	or	a, a
	sbc	hl, hl
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	ld	l, e
	ld	h, d
	push	ix
	ld	bc, -1843
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, 6
	add	hl, de
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_100
	ld	de, -1830
BB9_93:
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	jp	BB9_106
BB9_94:
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	ix
	ld	bc, -1839
	add	ix, bc
	ld	(ix), iy
	pop	ix
	push	iy
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	ld	hl, _car_positions
	ld	bc, -1822
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	add	hl, de
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	a, (hl)
	add	a, -6
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	l, a
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_99
	ld	hl, _car_positions+19
	ld	bc, -1822
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	add	hl, de
	ld	a, (hl)
	cp	a, 2
	jp	nz, BB9_99
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1843
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(hl), a
	ld.sis	de, -6
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	ld	de, 0
	ld	(ix - 3), bc
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	d, h
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	a, 1
	jp	nz, BB9_98
	ld	a, 0
BB9_98:
	and	a, 1
	ld	e, a
	ld	bc, -1861
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	d, h
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, de
	ld	de, -1858
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	push	ix
	ld	de, -1864
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1822
	add	ix, bc
	ld	de, (ix)
	pop	ix
	jp	BB9_59
BB9_99:
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	d, h
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	(ix - 3), de
	push	ix
	ld	de, -1864
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jp	BB9_85
BB9_100:
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	call	_CheckPos
	ld	de, -1830
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_105
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, 12
	add	hl, de
	ld	bc, -1852
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_103
	ld	de, -1852
	jp	BB9_93
BB9_103:
	ld	de, -1830
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	jp	z, BB9_288
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 24
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_288
BB9_105:
	ld	hl, _car_positions
	add	hl, bc
	ld	d, 0
	ld	e, (hl)
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	de, -1826
	lea	iy, ix
	add	iy, de
	ld	iy, (iy)
BB9_106:
	push	ix
	ld	de, -1864
	add	ix, de
	ld	bc, (ix)
	pop	ix
BB9_107:
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_109
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_110
BB9_109:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	add	ix, de
	ld	(ix), hl
	jp	BB9_124
BB9_110:
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	push	bc
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, de
	call	__setflag
	push	bc
	pop	hl
	jp	m, BB9_114
	ld	de, 16
	or	a, a
	sbc	hl, de
	call	__setflag
	jp	p, BB9_122
	ld	hl, _car_positions
	ld	de, -1830
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	add	a, 12
	ld	l, a
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_122
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 24
	jp	BB9_117
BB9_114:
	ld	de, 1
	or	a, a
	sbc	hl, de
	call	__setflag
	jp	m, BB9_122
	ld	hl, _car_positions
	ld	de, -1830
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	add	hl, bc
	ld	a, (hl)
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	add	a, 18
	ld	l, a
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_122
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 18
BB9_117:
	or	a, a
	sbc.sis	hl, de
	ld	de, -1826
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	iy, (hl)
	push	ix
	ld	de, -1864
	push	af
	add	ix, de
	pop	af
	ld	bc, (ix)
	pop	ix
	jp	nc, BB9_109
	ld	hl, _car_positions+19
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	hl, de
	ld	a, (hl)
	cp	a, 2
	ld	bc, (ix - 3)
	jp	nz, BB9_109
	ld	hl, _car_positions
	add	hl, de
	ld	bc, -1843
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	add	a, 6
	ld	(hl), a
	ld.sis	de, 6
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	bc
	pop	hl
	ld	de, 0
	ld	(ix - 3), bc
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, l
	ld	d, h
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	push	bc
	pop	hl
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	a, 1
	jp	nz, BB9_121
	ld	a, 0
BB9_121:
	and	a, 1
	ld	e, a
	ld	bc, -1861
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	d, h
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, de
	ld	de, -1858
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	jp	BB9_123
BB9_122:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB9_123:
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	push	ix
	ld	de, -1864
	add	ix, de
	ld	bc, (ix)
BB9_124:
	pop	ix
BB9_125:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 32
	jp	nz, BB9_127
	ld	de, -1823
	lea	hl, ix
	add	hl, de
	ld	a, (hl)
	push	ix
	ld	de, -1840
	add	ix, de
	ld	l, (ix)
	pop	ix
	cp	a, l
	jp	nz, BB9_263
BB9_127:
	ld	(ix - 3), bc
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
BB9_128:
	ld	bc, (ix - 3)
BB9_129:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, -128
	jp	nz, BB9_131
	ld	(ix - 3), bc
	ld	bc, -1823
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	l, (ix)
	pop	ix
	cp	a, l
	ld	bc, (ix - 3)
	jp	nz, BB9_265
BB9_131:
	ld	(ix - 3), bc
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	ix
	ld	de, -1858
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	de, -1843
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	de, -1855
	add	ix, de
	ld	(ix), hl
BB9_132:
	pop	ix
	ld	bc, (ix - 3)
BB9_133:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 16
	ld	de, -1822
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	(hl), bc
	jp	nz, BB9_146
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 100
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_146
	ld	de, -1846
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	l, 1
	jp	nc, BB9_137
	ld	l, 0
BB9_137:
	push	ix
	ld	de, -1823
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	e, (ix)
	pop	ix
	cp	a, e
	ld	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_139
	ld	a, l
BB9_139:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_141
	ld	l, 0
BB9_141:
	bit	0, a
	jp	nz, BB9_143
	ld	l, 0
BB9_143:
	lea	bc, iy
	ld.sis	de, -100
	add.sis	iy, de
	bit	0, l
	jp	nz, BB9_145
	ld	iyl, c
	ld	iyh, b
BB9_145:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_147
BB9_146:
BB9_147:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 16
	jp	nz, BB9_158
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 100
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_158
	ld	de, -1846
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	l, 1
	jp	nc, BB9_151
	ld	l, 0
BB9_151:
	push	ix
	ld	de, -1823
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	e, (ix)
	pop	ix
	cp	a, e
	ld	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_153
	ld	a, l
BB9_153:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_155
	ld	l, 0
BB9_155:
	bit	0, a
	jp	nz, BB9_157
	ld	l, 0
BB9_157:
	bit	0, l
	ld.sis	de, 0
	jp	nz, BB9_159
BB9_158:
	ld	e, iyl
	ld	d, iyh
BB9_159:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 8
	jp	nz, BB9_172
	ld	l, e
	ld	h, d
	ld.sis	bc, 10
	or	a, a
	sbc.sis	hl, bc
	jp	c, BB9_170
	ld	bc, -1846
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	nc, BB9_163
	ld	l, 0
BB9_163:
	ld	bc, -1823
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -1840
	add	ix, de
	ld	c, (ix)
	pop	ix
	cp	a, c
	ld	a, 1
	ld	de, (ix - 3)
	jp	nz, BB9_165
	ld	a, l
BB9_165:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_167
	ld	l, 0
BB9_167:
	bit	0, a
	jp	nz, BB9_169
	ld	l, 0
BB9_169:
	ld	iyl, e
	ld	iyh, d
	ld.sis	bc, -10
	add.sis	iy, bc
	bit	0, l
	jp	nz, BB9_171
BB9_170:
	ld	iyl, e
	ld	iyh, d
BB9_171:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_173
BB9_172:
	ld	iyl, e
	ld	iyh, d
BB9_173:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 8
	jp	nz, BB9_184
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 10
	or	a, a
	sbc.sis	hl, de
	jp	nc, BB9_184
	ld	de, -1846
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	l, 1
	jp	nc, BB9_177
	ld	l, 0
BB9_177:
	push	ix
	ld	de, -1823
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	e, (ix)
	pop	ix
	cp	a, e
	ld	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_179
	ld	a, l
BB9_179:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_181
	ld	l, 0
BB9_181:
	bit	0, a
	jp	nz, BB9_183
	ld	l, 0
BB9_183:
	bit	0, l
	ld.sis	hl, 0
	ld	e, l
	ld	d, h
	jp	nz, BB9_185
BB9_184:
	ld	e, iyl
	ld	d, iyh
BB9_185:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 4
	jp	nz, BB9_193
	ld	bc, -1846
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	nc, BB9_188
	ld	l, 0
BB9_188:
	ld	bc, -1823
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -1840
	add	ix, de
	ld	c, (ix)
	pop	ix
	cp	a, c
	ld	a, 1
	ld	de, (ix - 3)
	jp	nz, BB9_190
	ld	a, l
BB9_190:
	ld	l, 1
	xor	a, l
	bit	0, a
	ld	(ix - 3), de
	ld	de, -1822
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	ld	de, (ix - 3)
	jp	nz, BB9_193
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB9_193
	call	_random
	ld	bc, 1811
	xor	a, a
	call	__lremu
	ld	de, -1822
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	hl
	pop	de
BB9_193:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 2
	jp	nz, BB9_206
	ld	l, e
	ld	h, d
	ld.sis	bc, 1801
	or	a, a
	sbc.sis	hl, bc
	jp	nc, BB9_204
	ld	bc, -1846
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	nc, BB9_197
	ld	l, 0
BB9_197:
	ld	bc, -1823
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -1840
	add	ix, de
	ld	c, (ix)
	pop	ix
	cp	a, c
	ld	a, 1
	ld	de, (ix - 3)
	jp	nz, BB9_199
	ld	a, l
BB9_199:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_201
	ld	l, 0
BB9_201:
	bit	0, a
	jp	nz, BB9_203
	ld	l, 0
BB9_203:
	ld	iyl, e
	ld	iyh, d
	ld.sis	bc, 10
	add.sis	iy, bc
	bit	0, l
	jp	nz, BB9_205
BB9_204:
	ld	iyl, e
	ld	iyh, d
BB9_205:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_207
BB9_206:
	ld	iyl, e
	ld	iyh, d
BB9_207:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 2
	jp	nz, BB9_218
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 1801
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_218
	ld	de, -1846
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	l, 1
	jp	nc, BB9_211
	ld	l, 0
BB9_211:
	push	ix
	ld	de, -1823
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	e, (ix)
	pop	ix
	cp	a, e
	ld	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_213
	ld	a, l
BB9_213:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_215
	ld	l, 0
BB9_215:
	bit	0, a
	jp	nz, BB9_217
	ld	l, 0
BB9_217:
	bit	0, l
	ld.sis	de, 1810
	jp	nz, BB9_219
BB9_218:
	ld	e, iyl
	ld	d, iyh
BB9_219:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 1
	jp	nz, BB9_232
	ld	l, e
	ld	h, d
	ld.sis	bc, 1711
	or	a, a
	sbc.sis	hl, bc
	jp	nc, BB9_230
	ld	bc, -1846
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	nc, BB9_223
	ld	l, 0
BB9_223:
	ld	bc, -1823
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -1840
	add	ix, de
	ld	c, (ix)
	pop	ix
	cp	a, c
	ld	a, 1
	ld	de, (ix - 3)
	jp	nz, BB9_225
	ld	a, l
BB9_225:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_227
	ld	l, 0
BB9_227:
	bit	0, a
	jp	nz, BB9_229
	ld	l, 0
BB9_229:
	ld	iyl, e
	ld	iyh, d
	ld.sis	bc, 100
	add.sis	iy, bc
	bit	0, l
	jp	nz, BB9_231
BB9_230:
	ld	iyl, e
	ld	iyh, d
BB9_231:
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_233
BB9_232:
	ld	iyl, e
	ld	iyh, d
BB9_233:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	cp	a, 1
	jp	nz, BB9_244
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	de, 1711
	or	a, a
	sbc.sis	hl, de
	jp	c, BB9_244
	ld	de, -1846
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 3
	or	a, a
	sbc.sis	hl, de
	ld	l, 1
	jp	nc, BB9_237
	ld	l, 0
BB9_237:
	push	ix
	ld	de, -1823
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	e, (ix)
	pop	ix
	cp	a, e
	ld	a, 1
	ld	bc, (ix - 3)
	jp	nz, BB9_239
	ld	a, l
BB9_239:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	l, 1
	jp	z, BB9_241
	ld	l, 0
BB9_241:
	bit	0, a
	jp	nz, BB9_243
	ld	l, 0
BB9_243:
	bit	0, l
	ld.sis	hl, 1810
	ld	e, l
	ld	d, h
	jp	nz, BB9_245
BB9_244:
	ld	e, iyl
	ld	d, iyh
BB9_245:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	bc, -1826
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	(hl), de
	push	de
	call	z, _GetCarPositionsFromId
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 193
	push	hl
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, 64
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_247
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	ld	hl, 0
	push	hl
	ld	bc, -1830
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	push	hl
	call	z, _DrawCursor
	pop	hl
	pop	hl
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
BB9_247:
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_249
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	ld	hl, 3
	push	hl
	ld	bc, -1830
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	push	hl
	call	nz, _DrawCursor
	pop	hl
	pop	hl
BB9_249:
	call	_DrawBoard
	ld	de, 0
	ld	(ix - 3), de
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, (ix - 3)
	ld	e, c
	ld	d, b
	ld	(ix - 3), bc
	ld	bc, -1833
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	ld	a, (hl)
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	hl
	ld	de, -1843
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	push	bc
	call	_DrawLevelInfo
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -3
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 8
	push	hl
	ld	hl, 300
	push	hl
	ld	hl, 230
	push	hl
	ld	hl, 10
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	call	_DrawCars
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB9_251
	call	_DrawMenu
	jp	BB9_252
BB9_251:
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	call	z, _DrawWinScreen
BB9_252:
	call	_gfx_SwapDraw
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	iyl, e
	ld	iyh, d
	pop	de
	ld	hl, -720878
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	cp	a, iyl
	jp	nz, BB9_258
	ld	bc, -1849
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 65535
	call	__iand
	inc	hl
	ld	(ix - 3), de
	push	ix
	ld	de, -1849
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	bc, 65532
	call	__iand
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	ld	de, (ix - 3)
	jp	z, BB9_255
	ld	a, 0
BB9_255:
	ld	bc, -1849
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 1
	call	__iand
	ld	c, a
	ld	a, l
	ld	l, 1
	xor	a, l
	ld	l, a
	ld	a, c
	or	a, l
	bit	0, a
	jp	nz, BB9_257
	xor	a, a
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB9_257:
	ld	bc, -1827
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	push	ix
	ld	bc, -1852
	add	ix, bc
	ld	(ix), a
	pop	ix
	jp	BB9_259
BB9_258:
	or	a, a
	sbc	hl, hl
	push	ix
	ld	bc, -1849
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -1852
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
BB9_259:
	ld	hl, -720868
	push	ix
	ld	bc, -1823
	add	ix, bc
	ld	a, (ix)
	pop	ix
	cp	a, e
	jp	z, BB9_261
	ld.sis	bc, 0
	ld	(ix - 3), de
	push	ix
	ld	de, -1846
	add	ix, de
	ld	(ix), bc
	jp	BB9_262
BB9_261:
	ld	(ix - 3), de
	push	ix
	ld	de, -1846
	add	ix, de
	ld	bc, (ix)
	pop	ix
	inc.sis	bc
	push	ix
	add	ix, de
	ld	(ix), bc
BB9_262:
	pop	ix
	ld	de, (ix - 3)
	push	ix
	ld	bc, -1827
	add	ix, bc
	push	af
	ld	a, iyl
	ld	(ix), a
	pop	af
	pop	ix
	ld	bc, -1823
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	push	ix
	ld	bc, -1840
	add	ix, bc
	ld	(ix), a
	pop	ix
	push	ix
	ld	bc, -1822
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	ld	(ix - 3), de
	push	ix
	ld	de, -1855
	add	ix, de
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jp	BB9_3
BB9_263:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB9_269
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	jp	BB9_280
BB9_265:
	ld	l, c
	ld	h, b
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	jp	z, BB9_317
	ld	l, c
	ld	h, b
	ld	(ix - 3), de
	push	ix
	ld	de, -1864
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	ld.sis	hl, 0
	ld	c, l
	ld	b, h
	push	ix
	ld	de, -1830
	push	af
	add	ix, de
	pop	af
	ld	(ix), bc
	pop	ix
	ld.sis	bc, 98
	push	ix
	ld	de, -1836
	push	af
	add	ix, de
	pop	af
	ld	(ix), bc
	pop	ix
	ld	c, l
	ld	b, h
	push	ix
	ld	de, -1843
	push	af
	add	ix, de
	pop	af
	ld	(ix), bc
	pop	ix
	ld.sis	bc, 99
	push	ix
	ld	de, -1855
	push	af
	add	ix, de
	pop	af
	ld	(ix), bc
	pop	ix
	ld	c, l
	ld	b, h
	ld	de, (ix - 3)
	jp	z, BB9_133
	ld	bc, -1864
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 2
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB9_281
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	call	_gfx_SwapDraw
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	ld	de, -1826
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld.sis	bc, 0
	ld	e, c
	ld	d, b
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld.sis	de, 98
	push	ix
	ld	bc, -1836
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	bc, (ix - 3)
	ld	e, c
	ld	d, b
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1843
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld.sis	de, 99
	push	ix
	ld	bc, -1855
	add	ix, bc
	ld	(ix), de
	jp	BB9_132
BB9_269:
	ld	l, c
	ld	h, b
	ld.sis	de, 1
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_275
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, 17
	or	a, a
	sbc	hl, bc
	jp	z, BB9_277
	push	de
	pop	hl
	ld	bc, 99
	or	a, a
	sbc	hl, bc
	jp	z, BB9_277
	push	de
	pop	hl
	ld	bc, 16
	or	a, a
	sbc	hl, bc
	jp	z, BB9_277
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 98
	or	a, a
	sbc.sis	hl, bc
	jp	nz, BB9_277
	ld.sis	bc, 1
	ld	(ix - 3), bc
	ld	bc, -1826
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	jp	BB9_128
BB9_275:
	ld	l, c
	ld	h, b
	ld.sis	de, 2
	or	a, a
	sbc.sis	hl, de
	jp	nz, BB9_127
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	call	_gfx_SwapDraw
	ld	hl, -3
	push	hl
	call	_gfx_FillScreen
	pop	hl
	call	_DrawTitle
	ld	bc, -1826
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld.sis	hl, 0
	ld	e, l
	ld	d, h
	push	ix
	ld	bc, -1839
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld.sis	de, 98
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld.sis	bc, 99
	ld	(ix - 3), de
	push	ix
	ld	de, -1822
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	c, l
	ld	b, h
	ld	de, (ix - 3)
	jp	BB9_129
BB9_277:
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	ld	bc, -1826
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	jp	z, BB9_279
	ld.sis	hl, 99
	push	ix
	ld	bc, -1822
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB9_279:
	ld.sis	hl, 98
	ld	e, l
	ld	d, h
BB9_280:
	ld.sis	bc, 1
	jp	BB9_129
BB9_281:
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -1830
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -1836
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	ix
	ld	de, -1858
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	ix
	ld	de, -1843
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	de, -1855
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_133
BB9_282:
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, 3
	ld	bc, -1836
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, 99
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_291
	ld	de, -1836
	jp	BB9_40
BB9_284:
	ld	de, -1867
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, -3
	ld	bc, -1858
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, 99
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_294
	ld	bc, -1858
	jp	BB9_19
BB9_286:
	ld	de, -1843
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, -18
	ld	bc, -1830
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, 99
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_308
	ld	de, -1830
	jp	BB9_67
BB9_288:
	ld	de, -1852
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, 18
	ld	bc, -1843
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	ld	bc, 99
	or	a, a
	sbc	hl, bc
	jp	nz, BB9_311
	ld	de, -1843
	jp	BB9_93
BB9_290:
	ld	(ix - 3), de
	ld	de, -1830
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -1839
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ld.sis	bc, 1
	jp	BB9_57
BB9_291:
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -1839
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jp	nz, BB9_39
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	jp	nc, BB9_39
	ld	hl, _car_positions
	add	hl, de
	jp	BB9_33
BB9_294:
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -1867
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	bc, -1855
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	ld	de, (ix - 3)
	jp	nz, BB9_297
	ld	bc, -1864
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 3
	or	a, a
	sbc.sis	hl, bc
	ld	bc, -1830
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	jp	c, BB9_298
	ld	hl, _car_positions
	add	hl, de
	ld	d, 0
	ld	e, (hl)
	ex	de, hl
	jp	BB9_298
BB9_297:
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB9_298:
	push	ix
	ld	de, -1830
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld.sis	bc, 6
	call	__sremu
	ld	e, l
	ld	d, h
	ld	(ix - 3), de
	push	ix
	ld	de, -1822
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld.sis	bc, 1
	or	a, a
	sbc.sis	hl, bc
	ld	de, (ix - 3)
	jp	z, BB9_300
	ld	e, iyl
	ld	d, iyh
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	jp	BB9_7
BB9_300:
	ld	c, iyl
	ld	b, iyh
	ld	l, e
	ld	h, d
	add.sis	hl, bc
	or	a, a
	sbc.sis	hl, bc
	ld	de, -1822
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	iy, (iy)
	jp	z, BB9_6
	ld	de, -1836
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld.sis	de, 98
	or	a, a
	sbc.sis	hl, de
	jp	z, BB9_6
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_CheckPos
	push	hl
	pop	de
	pop	hl
	ld	hl, _car_positions
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	add	hl, de
	push	ix
	ld	bc, -1858
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	a, (hl)
	dec	a
	ld	bc, -1864
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	l, a
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 99
	or	a, a
	sbc	hl, de
	jp	nz, BB9_307
	ld	hl, _car_positions+19
	ld	bc, -1839
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	add	hl, de
	ld	a, (hl)
	cp	a, 1
	jp	nz, BB9_307
	ld	bc, -1858
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -1864
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	(hl), a
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	dec.sis	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_CheckPos
	pop	de
	ld	de, 0
	ld	bc, -1855
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	hl
	pop	bc
	or	a, a
	sbc	hl, de
	ld	a, 1
	jp	nz, BB9_306
	ld	a, 0
BB9_306:
	and	a, 1
	ld	e, a
	ld	(ix - 3), bc
	ld	bc, -1861
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	d, h
	ld	bc, -1843
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	add.sis	hl, de
	ld	de, -1843
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	ld	de, -1822
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	bc, (ix - 3)
	push	bc
	pop	de
	jp	BB9_7
BB9_307:
	ld	bc, -1855
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -1822
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	jp	BB9_7
BB9_308:
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -1843
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jp	nz, BB9_314
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ex	de, hl
	ld	e, iyl
	ld	d, iyh
	ex	de, hl
	ld.sis	bc, 18
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 3), de
	ld	de, -1864
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	ld	de, (ix - 3)
	jp	c, BB9_81
	ld	hl, _car_positions
	add	hl, de
	ld	iyh, 0
	push	af
	ld	a, (hl)
	ld	iyl, a
	pop	af
	jp	BB9_81
BB9_311:
	ld	bc, -1830
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -1852
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	or	a, a
	sbc	hl, bc
	ld	bc, -1826
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	ld	de, (ix - 3)
	jp	nz, BB9_315
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld.sis	bc, 18
	or	a, a
	sbc.sis	hl, bc
	ld	(ix - 3), de
	ld	de, -1864
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	bc, (hl)
	ld	de, (ix - 3)
	jp	nc, BB9_107
	ld	hl, _car_positions
	add	hl, de
	ld	d, 0
	ld	e, (hl)
	ld	(ix - 3), bc
	ld	bc, -1839
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix - 3)
	jp	BB9_107
BB9_314:
	ld	de, -1839
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	jp	BB9_68
BB9_315:
	ld	de, -1864
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	jp	BB9_107
BB9_316:
	ld	bc, -1826
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB9_317:
	ld	a, iyh
	ld	(ix - 8), a
	ld	a, iyl
	ld	(ix - 7), a
	ld	hl, L_.str.15
	push	hl
	ld	hl, L_.str.13
	push	hl
	call	_ti_Open
	ld	e, a
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	pop	hl
	pop	hl
	push	de
	ld	hl, 1
	push	hl
	ld	hl, 1813
	push	hl
	ld	bc, -1833
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	call	_ti_SetArchiveStatus
	pop	hl
	pop	hl
	ld	bc, -1822
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_ti_Close
	pop	hl
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"RushCE v1.1.0", 0

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"-100", 0

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"-10", 0

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Random", 0

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"+10", 0

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"+100", 0

	section	.bss,"aw",@nobits
	public	_car_positions
_car_positions:
	rb	38

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"Level:", 0

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"/", 0

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"1811", 0

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Highscore:", 0

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"Moves:", 0

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"Congratulations! You have completed the level!", 0

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"Press 2nd to return to the main menu...", 0

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"RUSHSV", 0

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"r+", 0

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"w", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	_random
	extern	_gfx_End
	extern	__Unwind_SjLj_Register
	extern	_gfx_Begin
	extern	_gfx_Line
	extern	__sshl
	extern	_gfx_SetPalette
	extern	_ti_Close
	extern	_gfx_PrintString
	extern	__ishl
	extern	__sand
	extern	_ti_Read
	extern	_gfx_PrintInt
	extern	__idivs
	extern	__setflag
	extern	_srandom
	extern	__iand
	extern	_gfx_FillRectangle
	extern	_ti_Open
	extern	__sremu
	extern	_ti_GetSize
	extern	__bdivu
	extern	__frameset
	extern	_levels_data
	extern	__lremu
	extern	_palette_gfx
	extern	_ti_Write
	extern	_kb_Scan
	extern	_gfx_SwapDraw
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	_ti_SetArchiveStatus
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_gfx_SetColor
	extern	__bshl
	extern	_gfx_PrintStringXY
	extern	_gfx_SetTextXY
	extern	_gfx_SetTextScale
